openapi: 3.0.3
info:
  title: Django API
  version: 1.0.0
  description: Django API
paths:
  /api/v1/auth/login/:
    post:
      operationId: v1_auth_login_create
      description: |-
        Check the credentials and return the REST Token
        if the credentials are valid and authenticated.
        Calls Django Auth login method to register User ID
        in Django session framework

        Accept the following POST parameters: username, password
        Return the REST Framework Token Object's key.
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1AuthLoginCreateErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Method "get" not allowed.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Could not satisfy the request Accept header.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Unsupported media type "application/json" in request.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: A server error occurred.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: ''
  /api/v1/auth/logout/:
    post:
      operationId: v1_auth_logout_create
      description: |-
        Calls Django logout method and delete the Token object
        assigned to the current User object.

        Accepts/Returns nothing.
      tags:
      - v1
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1AuthLogoutCreateErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Method "get" not allowed.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Could not satisfy the request Accept header.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Unsupported media type "application/json" in request.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: A server error occurred.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/v1/auth/password/change/:
    post:
      operationId: v1_auth_password_change_create
      description: |-
        Calls Django Auth SetPasswordForm save method.

        Accepts the following POST parameters: new_password1, new_password2
        Returns the success/fail message.
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordChange'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordChange'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordChange'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1AuthPasswordChangeCreateErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Method "get" not allowed.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Could not satisfy the request Accept header.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Unsupported media type "application/json" in request.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: A server error occurred.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/v1/auth/password/reset/:
    post:
      operationId: v1_auth_password_reset_create
      description: |-
        Calls Django Auth PasswordResetForm save method.

        Accepts the following POST parameters: email
        Returns the success/fail message.
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomPasswordReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomPasswordReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomPasswordReset'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1AuthPasswordResetCreateErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Method "get" not allowed.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Could not satisfy the request Accept header.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Unsupported media type "application/json" in request.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: A server error occurred.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/v1/auth/password/reset-token-valid/:
    get:
      operationId: v1_auth_password_reset_token_valid_retrieve
      description: |-
        Checks if the password reset token is valid.

        Params: uid (string), token (string)
      parameters:
      - in: query
        name: token
        schema:
          type: string
          minLength: 1
        required: true
      - in: query
        name: uid
        schema:
          type: string
          minLength: 1
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1AuthPasswordResetTokenValidRetrieveErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Method "get" not allowed.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Could not satisfy the request Accept header.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Unsupported media type "application/json" in request.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: A server error occurred.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetKeyValidResponse'
          description: ''
  /api/v1/auth/password/reset/confirm/:
    post:
      operationId: v1_auth_password_reset_confirm_create
      description: |-
        Password reset e-mail link is confirmed, therefore
        this resets the user's password.

        Accepts the following POST parameters: token, uid,
            new_password1, new_password2
        Returns the success/fail message.
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1AuthPasswordResetConfirmCreateErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Method "get" not allowed.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Could not satisfy the request Accept header.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Unsupported media type "application/json" in request.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: A server error occurred.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/v1/auth/register/:
    post:
      operationId: v1_auth_register_create
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomRegister'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomRegister'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomRegister'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1AuthRegisterCreateErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Method "get" not allowed.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Could not satisfy the request Accept header.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Unsupported media type "application/json" in request.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: A server error occurred.
                      attr: null
          description: ''
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: ''
  /api/v1/auth/register/resend-email/:
    post:
      operationId: v1_auth_register_resend_email_create
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResendEmailVerification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResendEmailVerification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResendEmailVerification'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1AuthRegisterResendEmailCreateErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Method "get" not allowed.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Could not satisfy the request Accept header.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Unsupported media type "application/json" in request.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: A server error occurred.
                      attr: null
          description: ''
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/v1/auth/register/token-valid/:
    get:
      operationId: v1_auth_register_token_valid_retrieve
      description: |-
        Checks if the registration key is valid.

        Params: key (string)
      parameters:
      - in: query
        name: key
        schema:
          type: string
        description: The registration key.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1AuthRegisterTokenValidRetrieveErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Method "get" not allowed.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Could not satisfy the request Accept header.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Unsupported media type "application/json" in request.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: A server error occurred.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistrationKeyValidResponse'
          description: ''
  /api/v1/auth/register/verify-email/:
    post:
      operationId: v1_auth_register_verify_email_create
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyEmail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VerifyEmail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VerifyEmail'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1AuthRegisterVerifyEmailCreateErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Method "get" not allowed.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Could not satisfy the request Accept header.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Unsupported media type "application/json" in request.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: A server error occurred.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/v1/auth/social/google/:
    post:
      operationId: v1_auth_social_google_create
      description: |-
        class used for social authentications
        example usage for facebook with access_token
        -------------
        from allauth.socialaccount.providers.facebook.views import FacebookOAuth2Adapter

        class FacebookLogin(SocialLoginView):
            adapter_class = FacebookOAuth2Adapter
        -------------

        example usage for facebook with code

        -------------
        from allauth.socialaccount.providers.facebook.views import FacebookOAuth2Adapter
        from allauth.socialaccount.providers.oauth2.client import OAuth2Client

        class FacebookLogin(SocialLoginView):
            adapter_class = FacebookOAuth2Adapter
            client_class = OAuth2Client
            callback_url = 'localhost:8000'
        -------------
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SocialLogin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SocialLogin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SocialLogin'
      security:
      - {}
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1AuthSocialGoogleCreateErrorResponse400'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Method "get" not allowed.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Could not satisfy the request Accept header.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Unsupported media type "application/json" in request.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: A server error occurred.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLoginResponse'
          description: ''
  /api/v1/auth/social/google/connect/:
    post:
      operationId: v1_auth_social_google_connect_create
      description: |-
        class used for social account linking

        example usage for facebook with access_token
        -------------
        from allauth.socialaccount.providers.facebook.views import FacebookOAuth2Adapter

        class FacebookConnect(SocialConnectView):
            adapter_class = FacebookOAuth2Adapter
        -------------
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SocialConnect'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SocialConnect'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SocialConnect'
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1AuthSocialGoogleConnectCreateErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Method "get" not allowed.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Could not satisfy the request Accept header.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Unsupported media type "application/json" in request.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: A server error occurred.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleConnectResponse'
          description: ''
  /api/v1/auth/socialaccounts/:
    get:
      operationId: v1_auth_socialaccounts_list
      description: List SocialAccounts for the currently logged in user
      tags:
      - v1
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1AuthSocialaccountsListErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Method "get" not allowed.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Could not satisfy the request Accept header.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Unsupported media type "application/json" in request.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: A server error occurred.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SocialAccount'
          description: ''
  /api/v1/auth/socialaccounts/{id}/disconnect/:
    post:
      operationId: v1_auth_socialaccounts_disconnect_create
      description: |-
        Disconnect SocialAccount from remote service for
        the currently logged in user
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SocialConnect'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SocialConnect'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SocialConnect'
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1AuthSocialaccountsDisconnectCreateErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Method "get" not allowed.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Could not satisfy the request Accept header.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Unsupported media type "application/json" in request.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: A server error occurred.
                      attr: null
          description: ''
        '200':
          description: No response body
  /api/v1/auth/user/:
    get:
      operationId: v1_auth_user_retrieve
      description: |-
        Reads and updates UserModel fields
        Accepts GET, PUT, PATCH, DELETE methods.

        Default accepted fields: username, first_name, last_name
        Default display fields: pk, username, email, first_name, last_name
        Read-only fields: pk, email

        Returns UserModel fields.
      tags:
      - v1
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1AuthUserRetrieveErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Method "get" not allowed.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Could not satisfy the request Accept header.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Unsupported media type "application/json" in request.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: A server error occurred.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUserDetails'
          description: ''
    put:
      operationId: v1_auth_user_update
      description: |-
        Reads and updates UserModel fields
        Accepts GET, PUT, PATCH, DELETE methods.

        Default accepted fields: username, first_name, last_name
        Default display fields: pk, username, email, first_name, last_name
        Read-only fields: pk, email

        Returns UserModel fields.
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomUserDetails'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomUserDetails'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomUserDetails'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1AuthUserUpdateErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Method "get" not allowed.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Could not satisfy the request Accept header.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Unsupported media type "application/json" in request.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: A server error occurred.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUserDetails'
          description: ''
    patch:
      operationId: v1_auth_user_partial_update
      description: |-
        Reads and updates UserModel fields
        Accepts GET, PUT, PATCH, DELETE methods.

        Default accepted fields: username, first_name, last_name
        Default display fields: pk, username, email, first_name, last_name
        Read-only fields: pk, email

        Returns UserModel fields.
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCustomUserDetails'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCustomUserDetails'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCustomUserDetails'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1AuthUserPartialUpdateErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Method "get" not allowed.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Could not satisfy the request Accept header.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Unsupported media type "application/json" in request.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: A server error occurred.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUserDetails'
          description: ''
    delete:
      operationId: v1_auth_user_destroy
      description: |-
        Reads and updates UserModel fields
        Accepts GET, PUT, PATCH, DELETE methods.

        Default accepted fields: username, first_name, last_name
        Default display fields: pk, username, email, first_name, last_name
        Read-only fields: pk, email

        Returns UserModel fields.
      tags:
      - v1
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1AuthUserDestroyErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Method "get" not allowed.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Could not satisfy the request Accept header.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Unsupported media type "application/json" in request.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: A server error occurred.
                      attr: null
          description: ''
        '204':
          description: No response body
  /api/v1/files/upload/direct/finish/:
    post:
      operationId: v1_files_upload_direct_finish_create
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileDirectUploadFinishApi.Input'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FileDirectUploadFinishApi.Input'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileDirectUploadFinishApi.Input'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1FilesUploadDirectFinishCreateErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Method "get" not allowed.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Could not satisfy the request Accept header.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Unsupported media type "application/json" in request.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: A server error occurred.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileDirectUploadFinishResponse'
          description: ''
  /api/v1/files/upload/direct/local/{file_id}/:
    post:
      operationId: v1_files_upload_direct_local_create
      parameters:
      - in: path
        name: file_id
        schema:
          type: string
        required: true
      tags:
      - v1
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1FilesUploadDirectLocalCreateErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Method "get" not allowed.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Could not satisfy the request Accept header.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Unsupported media type "application/json" in request.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: A server error occurred.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileDirectUploadLocalResponse'
          description: ''
  /api/v1/files/upload/direct/start/:
    post:
      operationId: v1_files_upload_direct_start_create
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileDirectUploadStartApi.Input'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FileDirectUploadStartApi.Input'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileDirectUploadStartApi.Input'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1FilesUploadDirectStartCreateErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Method "get" not allowed.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Could not satisfy the request Accept header.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Unsupported media type "application/json" in request.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: A server error occurred.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileDirectUploadStartResponse'
          description: ''
  /api/v1/files/upload/standard/:
    post:
      operationId: v1_files_upload_standard_create
      tags:
      - v1
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1FilesUploadStandardCreateErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Method "get" not allowed.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Could not satisfy the request Accept header.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Unsupported media type "application/json" in request.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: A server error occurred.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileStandardUploadResponse'
          description: ''
    put:
      operationId: v1_files_upload_standard_update
      tags:
      - v1
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1FilesUploadStandardUpdateErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Method "get" not allowed.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Could not satisfy the request Accept header.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Unsupported media type "application/json" in request.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: A server error occurred.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileStandardUploadUpdateResponse'
          description: ''
  /api/v1/users/access/:
    get:
      operationId: v1_users_access_retrieve
      parameters:
      - in: query
        name: end_date
        schema:
          type: string
          format: date-time
      - in: query
        name: page
        schema:
          type: integer
        description: A page number within the paginated result set.
      - in: query
        name: page_size
        schema:
          type: integer
        description: Number of results to return per page.
      - in: query
        name: search
        schema:
          type: string
          maxLength: 254
          minLength: 1
      - in: query
        name: sort
        schema:
          type: string
          maxLength: 254
          minLength: 1
      - in: query
        name: start_date
        schema:
          type: string
          format: date-time
      tags:
      - v1
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1UsersAccessRetrieveErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Method "get" not allowed.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Could not satisfy the request Accept header.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Unsupported media type "application/json" in request.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: A server error occurred.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OneOf_PageNumberPagination_UserAccessListApi.Output'
          description: ''
  /api/v1/users/whitelist/:
    get:
      operationId: v1_users_whitelist_retrieve
      description: Returns a list of whitelisted users.
      parameters:
      - in: query
        name: page
        schema:
          type: integer
        description: A page number within the paginated result set.
      - in: query
        name: page_size
        schema:
          type: integer
        description: Number of results to return per page.
      - in: query
        name: search
        schema:
          type: string
          maxLength: 254
          minLength: 1
      - in: query
        name: sort
        schema:
          type: string
          maxLength: 254
          minLength: 1
      tags:
      - v1
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1UsersWhitelistRetrieveErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Method "get" not allowed.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Could not satisfy the request Accept header.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Unsupported media type "application/json" in request.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: A server error occurred.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OneOf_PageNumberPagination_UsersWhitelistListApi.Output'
          description: ''
    post:
      operationId: v1_users_whitelist_create
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsersWhitelistListApi.CreateInput'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UsersWhitelistListApi.CreateInput'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UsersWhitelistListApi.CreateInput'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1UsersWhitelistCreateErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Method "get" not allowed.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Could not satisfy the request Accept header.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Unsupported media type "application/json" in request.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: A server error occurred.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersWhitelistListApi.Output'
          description: ''
  /api/v1/users/whitelist/{id}/:
    patch:
      operationId: v1_users_whitelist_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUsersWhitelistDetailApi.UpdateInput'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUsersWhitelistDetailApi.UpdateInput'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUsersWhitelistDetailApi.UpdateInput'
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1UsersWhitelistPartialUpdateErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Method "get" not allowed.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Could not satisfy the request Accept header.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Unsupported media type "application/json" in request.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: A server error occurred.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersWhitelistDetailApi.Output'
          description: ''
    delete:
      operationId: v1_users_whitelist_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1UsersWhitelistDestroyErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Method "get" not allowed.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Could not satisfy the request Accept header.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Unsupported media type "application/json" in request.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: A server error occurred.
                      attr: null
          description: ''
        '204':
          description: No response body
components:
  schemas:
    ClientErrorEnum:
      enum:
      - client_error
      type: string
    CommonUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
          title: Email address
        first_name:
          type: string
          readOnly: true
        last_name:
          type: string
          readOnly: true
        extra:
          allOf:
          - $ref: '#/components/schemas/CommonUserSerializer_ExtraField'
          readOnly: true
      required:
      - email
      - extra
      - first_name
      - id
      - last_name
    CommonUserSerializer_ExtraField:
      type: object
      properties:
        picture:
          type: string
          format: uri
      required:
      - picture
    CustomPasswordReset:
      type: object
      description: Serializer for requesting a password reset e-mail.
      properties:
        email:
          type: string
          format: email
      required:
      - email
    CustomRegister:
      type: object
      properties:
        username:
          type: string
          maxLength: 150
          minLength: 1
        email:
          type: string
          format: email
        password1:
          type: string
          writeOnly: true
        password2:
          type: string
          writeOnly: true
        first_name:
          type: string
        last_name:
          type: string
      required:
      - email
      - first_name
      - last_name
      - password1
      - password2
      - username
    CustomUserDetails:
      type: object
      description: User model w/o password
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
          title: Email address
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        roles:
          type: array
          items:
            type: string
        permissions:
          type: array
          items:
            type: string
        extra:
          allOf:
          - $ref: '#/components/schemas/UserDetailsSerializer_ExtraField'
          readOnly: true
      required:
      - email
      - extra
      - id
      - permissions
      - roles
    Error401:
      type: object
      properties:
        code:
          allOf:
          - $ref: '#/components/schemas/ErrorCode401Enum'
          description: |-
            * `authentication_failed` - Authentication Failed
            * `not_authenticated` - Not Authenticated
        detail:
          type: string
        attr:
          type: string
          nullable: true
      required:
      - attr
      - code
      - detail
    Error404:
      type: object
      properties:
        code:
          allOf:
          - $ref: '#/components/schemas/ErrorCode404Enum'
          description: '* `not_found` - Not Found'
        detail:
          type: string
        attr:
          type: string
          nullable: true
      required:
      - attr
      - code
      - detail
    Error405:
      type: object
      properties:
        code:
          allOf:
          - $ref: '#/components/schemas/ErrorCode405Enum'
          description: '* `method_not_allowed` - Method Not Allowed'
        detail:
          type: string
        attr:
          type: string
          nullable: true
      required:
      - attr
      - code
      - detail
    Error406:
      type: object
      properties:
        code:
          allOf:
          - $ref: '#/components/schemas/ErrorCode406Enum'
          description: '* `not_acceptable` - Not Acceptable'
        detail:
          type: string
        attr:
          type: string
          nullable: true
      required:
      - attr
      - code
      - detail
    Error415:
      type: object
      properties:
        code:
          allOf:
          - $ref: '#/components/schemas/ErrorCode415Enum'
          description: '* `unsupported_media_type` - Unsupported Media Type'
        detail:
          type: string
        attr:
          type: string
          nullable: true
      required:
      - attr
      - code
      - detail
    Error500:
      type: object
      properties:
        code:
          allOf:
          - $ref: '#/components/schemas/ErrorCode500Enum'
          description: '* `error` - Error'
        detail:
          type: string
        attr:
          type: string
          nullable: true
      required:
      - attr
      - code
      - detail
    ErrorCode401Enum:
      enum:
      - authentication_failed
      - not_authenticated
      type: string
    ErrorCode404Enum:
      enum:
      - not_found
      type: string
    ErrorCode405Enum:
      enum:
      - method_not_allowed
      type: string
    ErrorCode406Enum:
      enum:
      - not_acceptable
      type: string
    ErrorCode415Enum:
      enum:
      - unsupported_media_type
      type: string
    ErrorCode500Enum:
      enum:
      - error
      type: string
    ErrorResponse401:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ClientErrorEnum'
          description: '* `client_error` - Client Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error401'
      required:
      - errors
      - type
    ErrorResponse404:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ClientErrorEnum'
          description: '* `client_error` - Client Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error404'
      required:
      - errors
      - type
    ErrorResponse405:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ClientErrorEnum'
          description: '* `client_error` - Client Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error405'
      required:
      - errors
      - type
    ErrorResponse406:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ClientErrorEnum'
          description: '* `client_error` - Client Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error406'
      required:
      - errors
      - type
    ErrorResponse415:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ClientErrorEnum'
          description: '* `client_error` - Client Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error415'
      required:
      - errors
      - type
    ErrorResponse500:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ServerErrorEnum'
          description: '* `server_error` - Server Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error500'
      required:
      - errors
      - type
    FileDirectUploadFinishApi.Input:
      type: object
      properties:
        file_id:
          type: string
      required:
      - file_id
    FileDirectUploadFinishResponse:
      type: object
      properties:
        id:
          type: string
      required:
      - id
    FileDirectUploadLocalResponse:
      type: object
      properties:
        id:
          type: string
      required:
      - id
    FileDirectUploadStartApi.Input:
      type: object
      properties:
        file_name:
          type: string
        file_type:
          type: string
      required:
      - file_name
      - file_type
    FileDirectUploadStartResponse:
      type: object
      properties:
        url:
          type: string
      required:
      - url
    FileStandardUploadResponse:
      type: object
      properties:
        id:
          type: string
      required:
      - id
    FileStandardUploadUpdateResponse:
      type: object
      properties:
        id:
          type: string
      required:
      - id
    GoogleConnectResponse:
      type: object
      properties:
        key:
          type: string
      required:
      - key
    GoogleLoginResponse:
      type: object
      properties:
        key:
          type: string
      required:
      - key
    Login:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
      required:
      - password
    OneOf_PageNumberPagination_UserAccessListApi.Output:
      oneOf:
      - $ref: '#/components/schemas/PageNumberPagination_UserAccessListApi.OutputSerializer_PaginatedResponse'
      - type: array
        items:
          $ref: '#/components/schemas/UserAccessListApi.Output'
    OneOf_PageNumberPagination_UsersWhitelistListApi.Output:
      oneOf:
      - $ref: '#/components/schemas/PageNumberPagination_UsersWhitelistListApi.OutputSerializer_PaginatedResponse'
      - type: array
        items:
          $ref: '#/components/schemas/UsersWhitelistListApi.Output'
    PageNumberPagination_UserAccessListApi.OutputSerializer_PaginatedResponse:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/PageNumberPagination_UserAccessListApi.OutputSerializer_PaginatedResponse_Pagination'
        data:
          type: array
          items:
            $ref: '#/components/schemas/UserAccessListApi.Output'
      required:
      - data
      - pagination
    PageNumberPagination_UserAccessListApi.OutputSerializer_PaginatedResponse_Pagination:
      type: object
      properties:
        page:
          type: integer
        page_size:
          type: integer
        count:
          type: integer
        pages:
          type: integer
      required:
      - count
      - page
      - page_size
      - pages
    PageNumberPagination_UsersWhitelistListApi.OutputSerializer_PaginatedResponse:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/PageNumberPagination_UsersWhitelistListApi.OutputSerializer_PaginatedResponse_Pagination'
        data:
          type: array
          items:
            $ref: '#/components/schemas/UsersWhitelistListApi.Output'
      required:
      - data
      - pagination
    PageNumberPagination_UsersWhitelistListApi.OutputSerializer_PaginatedResponse_Pagination:
      type: object
      properties:
        page:
          type: integer
        page_size:
          type: integer
        count:
          type: integer
        pages:
          type: integer
      required:
      - count
      - page
      - page_size
      - pages
    ParseError:
      type: object
      properties:
        code:
          allOf:
          - $ref: '#/components/schemas/ParseErrorCodeEnum'
          description: '* `parse_error` - Parse Error'
        detail:
          type: string
        attr:
          type: string
          nullable: true
      required:
      - attr
      - code
      - detail
    ParseErrorCodeEnum:
      enum:
      - parse_error
      type: string
    ParseErrorResponse:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ClientErrorEnum'
          description: '* `client_error` - Client Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ParseError'
      required:
      - errors
      - type
    PasswordChange:
      type: object
      properties:
        new_password1:
          type: string
          maxLength: 128
        new_password2:
          type: string
          maxLength: 128
      required:
      - new_password1
      - new_password2
    PasswordResetConfirm:
      type: object
      description: Serializer for confirming a password reset attempt.
      properties:
        new_password1:
          type: string
          maxLength: 128
        new_password2:
          type: string
          maxLength: 128
        uid:
          type: string
        token:
          type: string
      required:
      - new_password1
      - new_password2
      - token
      - uid
    PasswordResetKeyValidResponse:
      type: object
      properties:
        detail:
          type: string
      required:
      - detail
    PatchedCustomUserDetails:
      type: object
      description: User model w/o password
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
          title: Email address
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        roles:
          type: array
          items:
            type: string
        permissions:
          type: array
          items:
            type: string
        extra:
          allOf:
          - $ref: '#/components/schemas/UserDetailsSerializer_ExtraField'
          readOnly: true
      required:
      - email
      - extra
      - id
      - permissions
      - roles
    PatchedUsersWhitelistDetailApi.UpdateInput:
      type: object
      properties:
        email:
          type: string
          format: email
          maxLength: 254
        group:
          type: string
          maxLength: 254
    ProviderEnum:
      enum:
      - google
      type: string
    RegistrationKeyValidResponse:
      type: object
      properties:
        detail:
          type: string
      required:
      - detail
    ResendEmailVerification:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    RestAuthDetail:
      type: object
      properties:
        detail:
          type: string
          readOnly: true
      required:
      - detail
    ServerErrorEnum:
      enum:
      - server_error
      type: string
    SocialAccount:
      type: object
      description: serialize allauth SocialAccounts for use with a REST API
      properties:
        id:
          type: integer
          readOnly: true
        provider:
          allOf:
          - $ref: '#/components/schemas/ProviderEnum'
          description: '* `google` - Google'
        uid:
          type: string
          maxLength: 191
        last_login:
          type: string
          format: date-time
          readOnly: true
        date_joined:
          type: string
          format: date-time
          readOnly: true
      required:
      - date_joined
      - id
      - last_login
      - provider
      - uid
    SocialConnect:
      type: object
      properties:
        access_token:
          type: string
        code:
          type: string
        id_token:
          type: string
    SocialLogin:
      type: object
      properties:
        access_token:
          type: string
        code:
          type: string
        id_token:
          type: string
    Token:
      type: object
      description: Serializer for Token model.
      properties:
        key:
          type: string
          maxLength: 40
      required:
      - key
    UserAccessListApi.Output:
      type: object
      properties:
        id:
          type: integer
        user:
          $ref: '#/components/schemas/CommonUser'
        last_access:
          type: string
          format: date-time
        access:
          type: integer
      required:
      - access
      - id
      - last_access
      - user
    UserDetailsSerializer_ExtraField:
      type: object
      properties:
        picture:
          type: string
          format: uri
      required:
      - picture
    UsersWhitelistDetailApi.Output:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
          format: email
          maxLength: 254
        group:
          type: string
          maxLength: 254
        user:
          allOf:
          - $ref: '#/components/schemas/CommonUser'
          readOnly: true
      required:
      - email
      - group
      - id
      - user
    UsersWhitelistListApi.CreateInput:
      type: object
      properties:
        email:
          type: string
          format: email
          maxLength: 254
        group:
          type: string
          maxLength: 254
      required:
      - email
      - group
    UsersWhitelistListApi.Output:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
          format: email
          maxLength: 254
        group:
          type: string
          maxLength: 254
        user:
          allOf:
          - $ref: '#/components/schemas/CommonUser'
          readOnly: true
      required:
      - email
      - group
      - id
      - user
    V1AuthLoginCreateEmailErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - email
          type: string
          description: '* `email` - email'
        code:
          enum:
          - invalid
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    V1AuthLoginCreateError:
      oneOf:
      - $ref: '#/components/schemas/V1AuthLoginCreateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/V1AuthLoginCreateUsernameErrorComponent'
      - $ref: '#/components/schemas/V1AuthLoginCreateEmailErrorComponent'
      - $ref: '#/components/schemas/V1AuthLoginCreatePasswordErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/V1AuthLoginCreateNonFieldErrorsErrorComponent'
          username: '#/components/schemas/V1AuthLoginCreateUsernameErrorComponent'
          email: '#/components/schemas/V1AuthLoginCreateEmailErrorComponent'
          password: '#/components/schemas/V1AuthLoginCreatePasswordErrorComponent'
    V1AuthLoginCreateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/V1AuthLoginCreateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/V1AuthLoginCreateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    V1AuthLoginCreateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    V1AuthLoginCreatePasswordErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - password
          type: string
          description: '* `password` - password'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    V1AuthLoginCreateUsernameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - username
          type: string
          description: '* `username` - username'
        code:
          enum:
          - invalid
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    V1AuthLoginCreateValidationError:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ValidationErrorEnum'
          description: '* `validation_error` - Validation Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/V1AuthLoginCreateError'
      required:
      - errors
      - type
    V1AuthLogoutCreateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    V1AuthPasswordChangeCreateError:
      oneOf:
      - $ref: '#/components/schemas/V1AuthPasswordChangeCreateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/V1AuthPasswordChangeCreateNewPassword1ErrorComponent'
      - $ref: '#/components/schemas/V1AuthPasswordChangeCreateNewPassword2ErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/V1AuthPasswordChangeCreateNonFieldErrorsErrorComponent'
          new_password1: '#/components/schemas/V1AuthPasswordChangeCreateNewPassword1ErrorComponent'
          new_password2: '#/components/schemas/V1AuthPasswordChangeCreateNewPassword2ErrorComponent'
    V1AuthPasswordChangeCreateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/V1AuthPasswordChangeCreateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/V1AuthPasswordChangeCreateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    V1AuthPasswordChangeCreateNewPassword1ErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_password1
          type: string
          description: '* `new_password1` - new_password1'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    V1AuthPasswordChangeCreateNewPassword2ErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_password2
          type: string
          description: '* `new_password2` - new_password2'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    V1AuthPasswordChangeCreateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    V1AuthPasswordChangeCreateValidationError:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ValidationErrorEnum'
          description: '* `validation_error` - Validation Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/V1AuthPasswordChangeCreateError'
      required:
      - errors
      - type
    V1AuthPasswordResetConfirmCreateError:
      oneOf:
      - $ref: '#/components/schemas/V1AuthPasswordResetConfirmCreateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/V1AuthPasswordResetConfirmCreateNewPassword1ErrorComponent'
      - $ref: '#/components/schemas/V1AuthPasswordResetConfirmCreateNewPassword2ErrorComponent'
      - $ref: '#/components/schemas/V1AuthPasswordResetConfirmCreateUidErrorComponent'
      - $ref: '#/components/schemas/V1AuthPasswordResetConfirmCreateTokenErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/V1AuthPasswordResetConfirmCreateNonFieldErrorsErrorComponent'
          new_password1: '#/components/schemas/V1AuthPasswordResetConfirmCreateNewPassword1ErrorComponent'
          new_password2: '#/components/schemas/V1AuthPasswordResetConfirmCreateNewPassword2ErrorComponent'
          uid: '#/components/schemas/V1AuthPasswordResetConfirmCreateUidErrorComponent'
          token: '#/components/schemas/V1AuthPasswordResetConfirmCreateTokenErrorComponent'
    V1AuthPasswordResetConfirmCreateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/V1AuthPasswordResetConfirmCreateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/V1AuthPasswordResetConfirmCreateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    V1AuthPasswordResetConfirmCreateNewPassword1ErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_password1
          type: string
          description: '* `new_password1` - new_password1'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    V1AuthPasswordResetConfirmCreateNewPassword2ErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_password2
          type: string
          description: '* `new_password2` - new_password2'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    V1AuthPasswordResetConfirmCreateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    V1AuthPasswordResetConfirmCreateTokenErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - token
          type: string
          description: '* `token` - token'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    V1AuthPasswordResetConfirmCreateUidErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - uid
          type: string
          description: '* `uid` - uid'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    V1AuthPasswordResetConfirmCreateValidationError:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ValidationErrorEnum'
          description: '* `validation_error` - Validation Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/V1AuthPasswordResetConfirmCreateError'
      required:
      - errors
      - type
    V1AuthPasswordResetCreateEmailErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - email
          type: string
          description: '* `email` - email'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    V1AuthPasswordResetCreateError:
      oneOf:
      - $ref: '#/components/schemas/V1AuthPasswordResetCreateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/V1AuthPasswordResetCreateEmailErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/V1AuthPasswordResetCreateNonFieldErrorsErrorComponent'
          email: '#/components/schemas/V1AuthPasswordResetCreateEmailErrorComponent'
    V1AuthPasswordResetCreateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/V1AuthPasswordResetCreateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/V1AuthPasswordResetCreateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    V1AuthPasswordResetCreateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    V1AuthPasswordResetCreateValidationError:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ValidationErrorEnum'
          description: '* `validation_error` - Validation Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/V1AuthPasswordResetCreateError'
      required:
      - errors
      - type
    V1AuthPasswordResetTokenValidRetrieveErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    V1AuthRegisterCreateEmailErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - email
          type: string
          description: '* `email` - email'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    V1AuthRegisterCreateError:
      oneOf:
      - $ref: '#/components/schemas/V1AuthRegisterCreateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/V1AuthRegisterCreateUsernameErrorComponent'
      - $ref: '#/components/schemas/V1AuthRegisterCreateEmailErrorComponent'
      - $ref: '#/components/schemas/V1AuthRegisterCreatePassword1ErrorComponent'
      - $ref: '#/components/schemas/V1AuthRegisterCreatePassword2ErrorComponent'
      - $ref: '#/components/schemas/V1AuthRegisterCreateFirstNameErrorComponent'
      - $ref: '#/components/schemas/V1AuthRegisterCreateLastNameErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/V1AuthRegisterCreateNonFieldErrorsErrorComponent'
          username: '#/components/schemas/V1AuthRegisterCreateUsernameErrorComponent'
          email: '#/components/schemas/V1AuthRegisterCreateEmailErrorComponent'
          password1: '#/components/schemas/V1AuthRegisterCreatePassword1ErrorComponent'
          password2: '#/components/schemas/V1AuthRegisterCreatePassword2ErrorComponent'
          first_name: '#/components/schemas/V1AuthRegisterCreateFirstNameErrorComponent'
          last_name: '#/components/schemas/V1AuthRegisterCreateLastNameErrorComponent'
    V1AuthRegisterCreateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/V1AuthRegisterCreateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/V1AuthRegisterCreateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    V1AuthRegisterCreateFirstNameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - first_name
          type: string
          description: '* `first_name` - first_name'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    V1AuthRegisterCreateLastNameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - last_name
          type: string
          description: '* `last_name` - last_name'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    V1AuthRegisterCreateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    V1AuthRegisterCreatePassword1ErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - password1
          type: string
          description: '* `password1` - password1'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    V1AuthRegisterCreatePassword2ErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - password2
          type: string
          description: '* `password2` - password2'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    V1AuthRegisterCreateUsernameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - username
          type: string
          description: '* `username` - username'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - min_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `min_length` - min_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    V1AuthRegisterCreateValidationError:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ValidationErrorEnum'
          description: '* `validation_error` - Validation Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/V1AuthRegisterCreateError'
      required:
      - errors
      - type
    V1AuthRegisterResendEmailCreateEmailErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - email
          type: string
          description: '* `email` - email'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    V1AuthRegisterResendEmailCreateError:
      oneOf:
      - $ref: '#/components/schemas/V1AuthRegisterResendEmailCreateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/V1AuthRegisterResendEmailCreateEmailErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/V1AuthRegisterResendEmailCreateNonFieldErrorsErrorComponent'
          email: '#/components/schemas/V1AuthRegisterResendEmailCreateEmailErrorComponent'
    V1AuthRegisterResendEmailCreateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/V1AuthRegisterResendEmailCreateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/V1AuthRegisterResendEmailCreateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    V1AuthRegisterResendEmailCreateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    V1AuthRegisterResendEmailCreateValidationError:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ValidationErrorEnum'
          description: '* `validation_error` - Validation Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/V1AuthRegisterResendEmailCreateError'
      required:
      - errors
      - type
    V1AuthRegisterTokenValidRetrieveErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    V1AuthRegisterVerifyEmailCreateError:
      oneOf:
      - $ref: '#/components/schemas/V1AuthRegisterVerifyEmailCreateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/V1AuthRegisterVerifyEmailCreateKeyErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/V1AuthRegisterVerifyEmailCreateNonFieldErrorsErrorComponent'
          key: '#/components/schemas/V1AuthRegisterVerifyEmailCreateKeyErrorComponent'
    V1AuthRegisterVerifyEmailCreateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/V1AuthRegisterVerifyEmailCreateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/V1AuthRegisterVerifyEmailCreateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    V1AuthRegisterVerifyEmailCreateKeyErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - key
          type: string
          description: '* `key` - key'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    V1AuthRegisterVerifyEmailCreateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    V1AuthRegisterVerifyEmailCreateValidationError:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ValidationErrorEnum'
          description: '* `validation_error` - Validation Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/V1AuthRegisterVerifyEmailCreateError'
      required:
      - errors
      - type
    V1AuthSocialGoogleConnectCreateAccessTokenErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - access_token
          type: string
          description: '* `access_token` - access_token'
        code:
          enum:
          - invalid
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    V1AuthSocialGoogleConnectCreateCodeErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - code
          type: string
          description: '* `code` - code'
        code:
          enum:
          - invalid
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    V1AuthSocialGoogleConnectCreateError:
      oneOf:
      - $ref: '#/components/schemas/V1AuthSocialGoogleConnectCreateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/V1AuthSocialGoogleConnectCreateAccessTokenErrorComponent'
      - $ref: '#/components/schemas/V1AuthSocialGoogleConnectCreateCodeErrorComponent'
      - $ref: '#/components/schemas/V1AuthSocialGoogleConnectCreateIdTokenErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/V1AuthSocialGoogleConnectCreateNonFieldErrorsErrorComponent'
          access_token: '#/components/schemas/V1AuthSocialGoogleConnectCreateAccessTokenErrorComponent'
          code: '#/components/schemas/V1AuthSocialGoogleConnectCreateCodeErrorComponent'
          id_token: '#/components/schemas/V1AuthSocialGoogleConnectCreateIdTokenErrorComponent'
    V1AuthSocialGoogleConnectCreateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/V1AuthSocialGoogleConnectCreateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/V1AuthSocialGoogleConnectCreateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    V1AuthSocialGoogleConnectCreateIdTokenErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - id_token
          type: string
          description: '* `id_token` - id_token'
        code:
          enum:
          - invalid
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    V1AuthSocialGoogleConnectCreateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    V1AuthSocialGoogleConnectCreateValidationError:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ValidationErrorEnum'
          description: '* `validation_error` - Validation Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/V1AuthSocialGoogleConnectCreateError'
      required:
      - errors
      - type
    V1AuthSocialGoogleCreateAccessTokenErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - access_token
          type: string
          description: '* `access_token` - access_token'
        code:
          enum:
          - invalid
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    V1AuthSocialGoogleCreateCodeErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - code
          type: string
          description: '* `code` - code'
        code:
          enum:
          - invalid
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    V1AuthSocialGoogleCreateError:
      oneOf:
      - $ref: '#/components/schemas/V1AuthSocialGoogleCreateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/V1AuthSocialGoogleCreateAccessTokenErrorComponent'
      - $ref: '#/components/schemas/V1AuthSocialGoogleCreateCodeErrorComponent'
      - $ref: '#/components/schemas/V1AuthSocialGoogleCreateIdTokenErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/V1AuthSocialGoogleCreateNonFieldErrorsErrorComponent'
          access_token: '#/components/schemas/V1AuthSocialGoogleCreateAccessTokenErrorComponent'
          code: '#/components/schemas/V1AuthSocialGoogleCreateCodeErrorComponent'
          id_token: '#/components/schemas/V1AuthSocialGoogleCreateIdTokenErrorComponent'
    V1AuthSocialGoogleCreateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/V1AuthSocialGoogleCreateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/V1AuthSocialGoogleCreateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    V1AuthSocialGoogleCreateIdTokenErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - id_token
          type: string
          description: '* `id_token` - id_token'
        code:
          enum:
          - invalid
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    V1AuthSocialGoogleCreateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    V1AuthSocialGoogleCreateValidationError:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ValidationErrorEnum'
          description: '* `validation_error` - Validation Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/V1AuthSocialGoogleCreateError'
      required:
      - errors
      - type
    V1AuthSocialaccountsDisconnectCreateAccessTokenErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - access_token
          type: string
          description: '* `access_token` - access_token'
        code:
          enum:
          - invalid
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    V1AuthSocialaccountsDisconnectCreateCodeErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - code
          type: string
          description: '* `code` - code'
        code:
          enum:
          - invalid
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    V1AuthSocialaccountsDisconnectCreateError:
      oneOf:
      - $ref: '#/components/schemas/V1AuthSocialaccountsDisconnectCreateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/V1AuthSocialaccountsDisconnectCreateAccessTokenErrorComponent'
      - $ref: '#/components/schemas/V1AuthSocialaccountsDisconnectCreateCodeErrorComponent'
      - $ref: '#/components/schemas/V1AuthSocialaccountsDisconnectCreateIdTokenErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/V1AuthSocialaccountsDisconnectCreateNonFieldErrorsErrorComponent'
          access_token: '#/components/schemas/V1AuthSocialaccountsDisconnectCreateAccessTokenErrorComponent'
          code: '#/components/schemas/V1AuthSocialaccountsDisconnectCreateCodeErrorComponent'
          id_token: '#/components/schemas/V1AuthSocialaccountsDisconnectCreateIdTokenErrorComponent'
    V1AuthSocialaccountsDisconnectCreateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/V1AuthSocialaccountsDisconnectCreateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/V1AuthSocialaccountsDisconnectCreateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    V1AuthSocialaccountsDisconnectCreateIdTokenErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - id_token
          type: string
          description: '* `id_token` - id_token'
        code:
          enum:
          - invalid
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    V1AuthSocialaccountsDisconnectCreateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    V1AuthSocialaccountsDisconnectCreateValidationError:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ValidationErrorEnum'
          description: '* `validation_error` - Validation Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/V1AuthSocialaccountsDisconnectCreateError'
      required:
      - errors
      - type
    V1AuthSocialaccountsListErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    V1AuthUserDestroyErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    V1AuthUserPartialUpdateError:
      oneOf:
      - $ref: '#/components/schemas/V1AuthUserPartialUpdateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/V1AuthUserPartialUpdateFirstNameErrorComponent'
      - $ref: '#/components/schemas/V1AuthUserPartialUpdateLastNameErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/V1AuthUserPartialUpdateNonFieldErrorsErrorComponent'
          first_name: '#/components/schemas/V1AuthUserPartialUpdateFirstNameErrorComponent'
          last_name: '#/components/schemas/V1AuthUserPartialUpdateLastNameErrorComponent'
    V1AuthUserPartialUpdateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/V1AuthUserPartialUpdateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/V1AuthUserPartialUpdateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    V1AuthUserPartialUpdateFirstNameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - first_name
          type: string
          description: '* `first_name` - first_name'
        code:
          enum:
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    V1AuthUserPartialUpdateLastNameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - last_name
          type: string
          description: '* `last_name` - last_name'
        code:
          enum:
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    V1AuthUserPartialUpdateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    V1AuthUserPartialUpdateValidationError:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ValidationErrorEnum'
          description: '* `validation_error` - Validation Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/V1AuthUserPartialUpdateError'
      required:
      - errors
      - type
    V1AuthUserRetrieveErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    V1AuthUserUpdateError:
      oneOf:
      - $ref: '#/components/schemas/V1AuthUserUpdateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/V1AuthUserUpdateFirstNameErrorComponent'
      - $ref: '#/components/schemas/V1AuthUserUpdateLastNameErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/V1AuthUserUpdateNonFieldErrorsErrorComponent'
          first_name: '#/components/schemas/V1AuthUserUpdateFirstNameErrorComponent'
          last_name: '#/components/schemas/V1AuthUserUpdateLastNameErrorComponent'
    V1AuthUserUpdateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/V1AuthUserUpdateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/V1AuthUserUpdateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    V1AuthUserUpdateFirstNameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - first_name
          type: string
          description: '* `first_name` - first_name'
        code:
          enum:
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    V1AuthUserUpdateLastNameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - last_name
          type: string
          description: '* `last_name` - last_name'
        code:
          enum:
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    V1AuthUserUpdateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    V1AuthUserUpdateValidationError:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ValidationErrorEnum'
          description: '* `validation_error` - Validation Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/V1AuthUserUpdateError'
      required:
      - errors
      - type
    V1FilesUploadDirectFinishCreateError:
      oneOf:
      - $ref: '#/components/schemas/V1FilesUploadDirectFinishCreateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/V1FilesUploadDirectFinishCreateFileIdErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/V1FilesUploadDirectFinishCreateNonFieldErrorsErrorComponent'
          file_id: '#/components/schemas/V1FilesUploadDirectFinishCreateFileIdErrorComponent'
    V1FilesUploadDirectFinishCreateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/V1FilesUploadDirectFinishCreateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/V1FilesUploadDirectFinishCreateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    V1FilesUploadDirectFinishCreateFileIdErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - file_id
          type: string
          description: '* `file_id` - file_id'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    V1FilesUploadDirectFinishCreateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    V1FilesUploadDirectFinishCreateValidationError:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ValidationErrorEnum'
          description: '* `validation_error` - Validation Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/V1FilesUploadDirectFinishCreateError'
      required:
      - errors
      - type
    V1FilesUploadDirectLocalCreateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    V1FilesUploadDirectStartCreateError:
      oneOf:
      - $ref: '#/components/schemas/V1FilesUploadDirectStartCreateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/V1FilesUploadDirectStartCreateFileNameErrorComponent'
      - $ref: '#/components/schemas/V1FilesUploadDirectStartCreateFileTypeErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/V1FilesUploadDirectStartCreateNonFieldErrorsErrorComponent'
          file_name: '#/components/schemas/V1FilesUploadDirectStartCreateFileNameErrorComponent'
          file_type: '#/components/schemas/V1FilesUploadDirectStartCreateFileTypeErrorComponent'
    V1FilesUploadDirectStartCreateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/V1FilesUploadDirectStartCreateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/V1FilesUploadDirectStartCreateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    V1FilesUploadDirectStartCreateFileNameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - file_name
          type: string
          description: '* `file_name` - file_name'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    V1FilesUploadDirectStartCreateFileTypeErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - file_type
          type: string
          description: '* `file_type` - file_type'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    V1FilesUploadDirectStartCreateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    V1FilesUploadDirectStartCreateValidationError:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ValidationErrorEnum'
          description: '* `validation_error` - Validation Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/V1FilesUploadDirectStartCreateError'
      required:
      - errors
      - type
    V1FilesUploadStandardCreateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    V1FilesUploadStandardUpdateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    V1UsersAccessRetrieveErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    V1UsersWhitelistCreateEmailErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - email
          type: string
          description: '* `email` - email'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    V1UsersWhitelistCreateError:
      oneOf:
      - $ref: '#/components/schemas/V1UsersWhitelistCreateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/V1UsersWhitelistCreateEmailErrorComponent'
      - $ref: '#/components/schemas/V1UsersWhitelistCreateGroupErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/V1UsersWhitelistCreateNonFieldErrorsErrorComponent'
          email: '#/components/schemas/V1UsersWhitelistCreateEmailErrorComponent'
          group: '#/components/schemas/V1UsersWhitelistCreateGroupErrorComponent'
    V1UsersWhitelistCreateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/V1UsersWhitelistCreateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/V1UsersWhitelistCreateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    V1UsersWhitelistCreateGroupErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - group
          type: string
          description: '* `group` - group'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    V1UsersWhitelistCreateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    V1UsersWhitelistCreateValidationError:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ValidationErrorEnum'
          description: '* `validation_error` - Validation Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/V1UsersWhitelistCreateError'
      required:
      - errors
      - type
    V1UsersWhitelistDestroyErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    V1UsersWhitelistPartialUpdateEmailErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - email
          type: string
          description: '* `email` - email'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    V1UsersWhitelistPartialUpdateError:
      oneOf:
      - $ref: '#/components/schemas/V1UsersWhitelistPartialUpdateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/V1UsersWhitelistPartialUpdateEmailErrorComponent'
      - $ref: '#/components/schemas/V1UsersWhitelistPartialUpdateGroupErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/V1UsersWhitelistPartialUpdateNonFieldErrorsErrorComponent'
          email: '#/components/schemas/V1UsersWhitelistPartialUpdateEmailErrorComponent'
          group: '#/components/schemas/V1UsersWhitelistPartialUpdateGroupErrorComponent'
    V1UsersWhitelistPartialUpdateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/V1UsersWhitelistPartialUpdateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/V1UsersWhitelistPartialUpdateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    V1UsersWhitelistPartialUpdateGroupErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - group
          type: string
          description: '* `group` - group'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    V1UsersWhitelistPartialUpdateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    V1UsersWhitelistPartialUpdateValidationError:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ValidationErrorEnum'
          description: '* `validation_error` - Validation Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/V1UsersWhitelistPartialUpdateError'
      required:
      - errors
      - type
    V1UsersWhitelistRetrieveErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    ValidationErrorEnum:
      enum:
      - validation_error
      type: string
    VerifyEmail:
      type: object
      properties:
        key:
          type: string
          writeOnly: true
      required:
      - key
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtCookieAuth:
      type: apiKey
      in: cookie
      name: auth
    jwtHeaderAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
